#include <stdio.h>
#include <stdlib.h>

#define MAX 1000

typedef struct fraction_struct
{
    int num;
    int den;
} frac;

frac input_frac(){
    frac f;
    scanf("%d%*c%d", &f.num, &f.den);
    return f;
}

void printfa(frac *fPtr, int *n, int *i){
    printf("Fraction %d = %d/%d\n", *i + 1, fPtr->num, fPtr->den);
}

void inversefa(frac *fPtr, int *n){
    int i, j;
    for(i = 0, j = *n - 1; i < j; i++, j--){
        swap(&fPtr[i], &fPtr[j]);
    }
}

void swap(frac *f1, frac *f2){
    frac tmp;
    tmp = *f1;
    *f1 = *f2;
    *f2 = tmp;
}

int cmpfrac(frac *f1, frac *f2){
    if(f1->den == f2->den){
        if(f1->num == f2->num){
            return 0;
        }
        else if(f1->num < f2->num){
            return -1;
        }
        else{
            return 1;
        }
    }
    else{
        if(f1->num * f2->den == f2->num * f1->den){
            return 0;
        }
        else if(f1->num * f2->den < f2->num * f1->den){
            return -1;
        }
        else{
            return 1;
        }
    }
}

frac addfrac(frac *f1, frac *f2){
    frac f;
    if(f1->den == f2->den){
        f.num = f1->num + f2->num;
        f.den = f1->den;
    }
    else{
        f.num = f1->num * f2->den + f2->num * f1->den;
        f.den = f1->den * f2->den;
    }
    return f;
}

frac lowest_terms(int *num, int *den){
    int i, key;
    frac f;
    if(*num < *den){
        key = *num;
    }
    else if(*num > *den){
        key = *den;
    }
    else{
        key = *num;
    }
    for(i = 1; i <= key; i++){
        if(*num % i == 0 && *den % i == 0){
            *num /= i;
            *den /= i;
        }
    }
    f.num = *num;
    f.den = *den;
    return f;
}

frac mulfrac(frac *f1, frac *f2){
    frac f;
    f.num = f1->num * f2->num;
    f.den = f1->den * f2->den;
    return f;
}

int main()
{
    int ch, n, i, j;
    frac fa[MAX], f, f1, f2, flt;
    do{
        printf("Homework 13.3!!!\n");
        printf("1. Input for an array of fractions.\n");
        printf("2. Print the content of the fraction array.\n");
        printf("3. Inverse all the fractions in the array.\n");
        printf("4. Compare two fractions.\n");
        printf("5. Multiply two factions.\n");
        printf("6. Add two factions.\n");
        printf("Press '-1' to exit the application.\n");
        scanf("%d", &ch);
        switch(ch){
            case 1:
                printf("\nInput an array of fractions.\n");
                printf("Press '0/0' to stop inputting the frac in array.\n");
                for(i = 0, n = 0; i < MAX; i++, n++){
                    printf("Fraction %d = ", i + 1);
                    fa[i] = input_frac();
                    if(fa[i].num == 0 && fa[i].den == 0){
                        break;
                    }
                }
                break;
            case 2:
                for(i = 0; i < n; i++){
                    printfa(&fa[i], &n, &i);
                }
                break;
            case 3:
                inversefa(fa, &n);
                break;
            case 4:
                printf("Input frac 1: ");
                f1 = input_frac();
                printf("Input frac 2: ");
                f2 = input_frac();
                if(cmpfrac(&f1, &f2) == -1){
                    printf("Fraction 1 is less than fraction 2.\n");
                }
                else if(cmpfrac(&f1, &f2) == 1){
                    printf("Fraction 1 is greater than fraction 2.\n");
                }
                else{
                    printf("Fraction 1 is equal to fraction 2.\n");
                }
                break;
            case 5:
                printf("Input frac 1: ");
                f1 = input_frac();
                printf("Input frac 2: ");
                f2 = input_frac();
                f = mulfrac(&f1, &f2);
                flt = lowest_terms(&f.num, &f.den);
                printf("%d/%d * %d/%d = %d/%d\n", f1.num, f1.den, f2.num, f2.den, flt.num, flt.den);
            case 6:
                printf("Input frac 1: ");
                f1 = input_frac();
                printf("Input frac 2: ");
                f2 = input_frac();
                f = addfrac(&f1, &f2);
                flt = lowest_terms(&f.num, &f.den);
                printf("%d/%d + %d/%d = %d/%d\n", f1.num, f1.den, f2.num, f2.den, flt.num, flt.den);


        }
    } while(ch != -1);
    return 0;
}
