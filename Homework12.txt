#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>


#define MAX 50

int space_counter(char input_str[]){

    int i, count = 0;
    for(i = 0; i < strlen(input_str); i++){
        if(input_str[i] == ' ' || input_str[i] == '\t'){
            count++;
        }
    }

    return count;
}

void hw1(){
    char text[100];
    printf("Input a string: ");
    fflush(stdin);
    fgets(text, 100, stdin);
    printf("The number of spaces in this text is %d !\n", space_counter(text));
}



void replace(char input_str[], char c1, char c2){

    int i;
    for(i = 0; input_str[i] != '\0'; i++){ //input_str[i] != '\0' or i < strlen(input_str)
        if(input_str[i] == c1){
            input_str[i] = c2;
        }
    }
    puts(input_str);
}

void hw2(){
    char c1, c2, str[100];
    printf("Input a string: ");
    fflush(stdin);
    fgets(str, 100, stdin);
    printf("The character that is changed: ");
    c1 = getchar();
    fflush(stdin);
    printf("The new character: ");
    c2 = getchar();
    fflush(stdin);
    replace(str, c1, c2);
    getch();

}


int check(char str[]){

    int i;
    for(i = 0; i < 3; i++){
        if(!isalpha(str[i])){
            return 0;
        }
    }
    for(i = 3; i < 7; i++){
        if(!isdigit(str[i])){
            return 0;
        }
    }
    return 1;
}

void hw3(){
    char text[8];
    printf("Input a string in the format LLLNNNN: ");
    fflush(stdin);
    fgets(text, 8, stdin);
    if(check(text) == 1){
        printf("True format!\n");
    }
    else{
        printf("Wrong format!\n");
    }
}

void hw4(){
    int i, j = 0;
    char str[50], repl_str[50];
    printf("Input a first name and last name seperated by spaces: ");
    fflush(stdin);
    fgets(str, 50, stdin);

    for(i = 0; i < 50; i++){
        if(str[i] == ' '){
            break;
        }
        else{
            repl_str[j] = str[i];
            j++;
        }
    }

    printf("The first name is: ");
    for(i = 0; i < j; i++){
        printf("%c", repl_str[i]);
    }
    printf("\n");
}

int strend(char s[], char t[]){
    int ls, lt, i, j;
    for(ls = 0; s[ls]; ls++);//find the length of s
    for(lt = 0; t[lt]; lt++);//find the length of t

    for(i = ls, j = lt; i >= 0, j >= 0; i--, j--){

        if(t[j] != s[i]){
            return 0;
            break;
        }

    }

    return 1;
}

void hw5(){
    char s[100], t[100];
    printf("Input string s: ");
    fflush(stdin);
    fgets(s, 100, stdin);
    printf("Input string t: ");
    fflush(stdin);
    fgets(t, 100, stdin);

    if(strend(s, t) == 1){
        printf("t occurs at the end of s\n");
    }
    else{
        printf("t doesn't occur at the end of s\n");
    }

}


int inString (char *a, char *b) {
    int x, y;
    for (x = 0; x < 5; x++) {
    if (a[x] == b[0]) {
        for (y = 1; y < strlen(b) - 1; y++) {
            if (a[x + y] != b[y]) return 0;
        }
        return 1;
        }
    }
    return 0;
}
void getList (char *query, char *list[]) {
    int x, check = 0;
    for (x = 0; x < 5; x++) {
    if (inString(list[x], query)) {
        printf("%s\n", list[x]);
        check = 1;
    }
}
    if (!check) printf("No result found\n");
}

void hw6(){
    char str6[MAX], *list[] = {
        "TV127  31 inch Television",
        "CD057  CD Player",
        "TA877  Answering Machine",
        "CS409  Car Stereo",
        "PC655  Personal Computer"};
    printf("Enter product number (full or partial): ");
    fflush(stdin);
    fgets(str6, MAX, stdin);
    printf("We have:\n");
    fflush(stdin);
    getList(str6, list);//&str6[0]
}

int main()
{
    int n;
    do{
        printf("HOMEWORK12!\n");
        printf("1.Displays the number of spaces.\n");
        printf("2.Replace a character from a string to another character.\n");
        printf("3.Test a customer number in the format: LLLNNNN.\n");
        printf("4.Input a full name then print the first name.\n");
        printf("5.The function strend(s,t).\n");
        printf("6.Lookup a product description by entering all or part of its product number.\n");
        printf("Enter '-1' to exit the program.\n");
        scanf("%d", &n);
        switch(n){
            case 1: hw1(); break;
            case 2: hw2(); break;
            case 3: hw3(); break;
            case 4: hw4(); break;
            case 5: hw5(); break;
            case 6: hw6(); break;
            case -1: break;
        }
    } while(n != -1);
    return 0;
}
